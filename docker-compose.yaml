version: '3.5'

x-logging:
  &default-logging
  options:
    max-size: "100k"
    max-file: "5"
  driver: json-file

services:
  neos:
    image: dimaip/docker-neos-alpine:latest
    environment:
      REPOSITORY_URL: "${REPOSITORY_URL}"
      VERSION: '${BRANCH}'
      SITE_PACKAGE: '${SITE_PACKAGE}'
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      IMPORT_GITHUB_PUB_KEYS: '${GITHUB_USER}'
      DB_DATABASE: "${DB_DATABASE}"
      DB_HOST: "${DB_HOST}"
      DB_PASS: "${DB_PASS}"
      DB_USER: "${DB_USER}"
      FLOW_CONTEXT: "${FLOW_CONTEXT}"
      VIRTUAL_HOST: "myneosapplication.${CF_DOMAIN}"
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: "${CF_DOMAIN}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
      LETSENCRYPT_TEST: "${LETSENCRYPT_TEST}"

  db:
    image: mariadb:10.3
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASS}"
      MARIADB_DATABASE: "${DB_DATABASE}"
    volumes:
      - db:/var/lib/mysql
    ports:
      - 13306:3306

  nginx:
    container_name: nginx
    image: jwilder/nginx-proxy
    logging: *default-logging
    network_mode: host
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ./nginx/nginx.tmpl:/app/nginx.tmpl
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/certs:/etc/nginx/dhparam
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    restart: unless-stopped

  letsencrypt:
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    logging: *default-logging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /root/nginx/certs:/etc/nginx/certs
      - /root/nginx/certs:/etc/nginx/dhparam
      - /root/nginx/vhost.d:/etc/nginx/vhost.d
      - /root/nginx/html:/usr/share/nginx/html
    depends_on:
      - nginx
    restart: unless-stopped

  cloudflare:
    container_name: cloudflare
    image: tiredofit/nginx-proxy-cloudflare-companion
    logging: *default-logging
    environment:
      CF_TOKEN: "${CF_TOKEN}"
      CF_EMAIL: "${CF_EMAIL}"
      TARGET_DOMAIN: "${CF_TARGET}"
      DOMAIN1: "${CF_DOMAIN}"
      DOMAIN1_ZONE_ID: "${CF_ZONE_ID}"
      DOMAIN1_PROXIED: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - nginx
    restart: unless-stopped


volumes:
  db:
